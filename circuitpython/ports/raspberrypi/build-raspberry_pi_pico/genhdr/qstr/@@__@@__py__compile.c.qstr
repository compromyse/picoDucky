Q(micropython)
Q(bytecode)
Q(native)
Q(*)
Q(AssertionError)
Q(range)
Q(__aiter__)
Q(__anext__)
Q(StopAsyncIteration)
Q(__aenter__)
Q(__aenter__)
Q(BaseException)
Q(__aexit__)
Q(__class__)
Q(__aexit__)
Q(__repl_print__)
Q(super)
Q(__class__)
Q(OrderedDict)
Q(__await__)
Q(__class__)
Q(__name__)
Q(__module__)
Q(__qualname__)
Q(__class__)
Q(__class__)
Q(__class__)
TRANSLATE("can't assign to expression")
TRANSLATE("multiple *x in assignment")
TRANSLATE("can't assign to expression")
TRANSLATE("non-default argument follows default argument")
TRANSLATE("invalid micropython decorator")
TRANSLATE("invalid micropython decorator")
TRANSLATE("can't delete expression")
TRANSLATE("'break' outside loop")
TRANSLATE("'continue' outside loop")
TRANSLATE("'return' outside function")
TRANSLATE("import * not at module level")
TRANSLATE("identifier redefined as global")
TRANSLATE("no binding for nonlocal found")
TRANSLATE("identifier redefined as nonlocal")
TRANSLATE("can't declare nonlocal in outer code")
TRANSLATE("default 'except' must be last")
TRANSLATE("'await', 'async for' or 'async with' outside async function")
TRANSLATE("can't assign to expression")
TRANSLATE("*x must be assignment target")
TRANSLATE("super() can't find self")
TRANSLATE("can't have multiple *x")
TRANSLATE("can't have multiple **x")
TRANSLATE("LHS of keyword arg must be an id")
TRANSLATE("non-keyword arg after */**")
TRANSLATE("non-keyword arg after keyword arg")
TRANSLATE("expecting key:value for dict")
TRANSLATE("expecting just a value for set")
TRANSLATE("'yield' outside function")
TRANSLATE("'yield from' inside async function")
TRANSLATE("'await' outside function")
TRANSLATE("invalid syntax")
TRANSLATE("invalid syntax")
TRANSLATE("argument name reused")
